from maze import Maze, grid2maze, maze2graph
import pickle

"""
This file contains several of our mazes we can test our code with, making sure it runs correctly.
"""

directions = {'up':  (-1, 0),
             'down': ( 1, 0),
             'left': ( 0,-1),
             'right':( 0, 1)}

mazes = {}
graphs = {}

class maps():

    map_1 = ((3, 3, 3, 3, 3, 3, 3, 3, 3),
             (3, 0, 0, 0, 3, 2, 0, 0, 3),
             (3, 3, 0, 3, 3, 3, 0, 3, 3),
             (3, 6, 6, 6, 5, 6, 6, 6, 3),
             (3, 3, 0, 3, 3, 3, 0, 3, 3),
             (3, 0, 0, 0, 3, 0, 0, 0, 3),
             (3, 3, 3, 3, 3, 3, 3, 3, 3))
             
            
    
    map_2 = ((3, 3, 3, 3, 3, 3, 3),
             (3, 0, 0, 6, 0, 0, 3),
             (3, 2, 3, 6, 3, 0, 3),
             (3, 3, 3, 5, 3, 3, 3),
             (3, 0, 3, 6, 3, 0, 3),
             (3, 0, 0, 6, 0, 0, 3),
             (3, 3, 3, 3, 3, 3, 3))
    
    #Variation on map_2
    map22 = ((3, 3, 3, 3, 3, 3, 3),
             (3, 0, 0, 6, 0, 0, 3),
             (3, 2, 3, 6, 0, 0, 3),
             (3, 3, 3, 5, 3, 3, 3),
             (3, 0, 3, 6, 3, 0, 3),
             (3, 0, 0, 6, 0, 0, 3),
             (3, 3, 3, 3, 3, 3, 3))
    
    map_3 = ((3, 3, 3, 3, 3, 3, 3, 3, 3),
             (3, 0, 0, 3, 6, 0, 0, 0, 3),
             (3, 0, 3, 3, 6, 3, 3, 0, 3),
             (3, 0, 3, 3, 6, 3, 3, 3, 3),
             (3, 6, 6, 6, 5, 6, 6, 6, 3),
             (3, 3, 3, 3, 6, 3, 3, 0, 3),
             (3, 2, 3, 3, 6, 3, 3, 0, 3),
             (3, 0, 0, 0, 6, 3, 0, 0, 3),
             (3, 3, 3, 3, 3, 3, 3, 3, 3))
    
    map_4 = ((3, 3, 3, 3, 3, 3, 3, 3, 3),
             (3, 0, 0, 0, 3, 0, 0, 0, 3),
             (3, 0, 3, 0, 3, 0, 3, 0, 3),
             (3, 6, 5, 6, 6, 6, 6, 6, 3),
             (3, 0, 3, 0, 3, 0, 3, 0, 3),
             (3, 0, 0, 0, 3, 0, 2, 0, 3),
             (3, 3, 3, 3, 3, 3, 3, 3, 3))
    
    map_5 = ((3, 3, 3, 3, 3, 3, 3),
             (3, 3, 3, 5, 3, 3, 3),
             (3, 0, 3, 6, 3, 0, 3),
             (3, 0, 0, 6, 0, 0, 3),
             (3, 3, 3, 6, 3, 3, 3),
             (3, 0, 3, 6, 3, 2, 3),
             (3, 0, 0, 6, 0, 0, 3),
             (3, 3, 3, 3, 3, 3, 3))
    ##Maze 5 has two root nodes at the beginning
    #Maze 6 has a disjoint path
    
    map_6 = ((3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3),
             (3, 3, 3, 3, 0, 0, 3, 3, 0, 0, 3),
             (3, 3, 3, 3, 0, 0, 3, 3, 0, 0, 3),
             (3, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3),
             (3, 6, 6, 6, 6, 6, 6, 6, 6, 5, 3),
             (3, 3, 0, 3, 3, 3, 0, 3, 3, 3, 3),
             (3, 2, 0, 3, 3, 0, 0, 3, 3, 3, 3),
             (3, 0, 0, 3, 3, 0, 0, 3, 3, 3, 3),
             (3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3))
    
    map_7 = ((3, 3, 3, 3, 3, 3, 3, 3, 3),
             (3, 3, 3, 3, 0, 3, 0, 3, 3),
             (3, 3, 3, 3, 0, 3, 0, 3, 3),
             (3, 5, 6, 6, 6, 6, 6, 6, 3),
             (3, 6, 3, 3, 3, 3, 3, 6, 3),
             (3, 6, 6, 6, 6, 6, 6, 6, 3),
             (3, 3, 0, 0, 3, 3, 3, 3, 3),
             (3, 3, 3, 3, 3, 3, 3, 3, 3),)
    
    
    
    map_8 = ((3, 3, 3, 3, 3, 3, 3, 3, 3),
             (3, 3, 3, 3, 0, 2, 3, 3, 3),
             (3, 0, 3, 0, 0, 0, 3, 0, 3),
             (3, 6, 6, 6, 5, 6, 6, 6, 3),
             (3, 0, 3, 0, 0, 0, 3, 0, 3),
             (3, 3, 3, 3, 0, 3, 3, 3, 3),
             (3, 3, 3, 3, 3, 3, 3, 3, 3))
    
    
    map_9 = ((3, 3, 3, 3, 3, 3, 3, 3, 3),
             (3, 0, 0, 0, 3, 0, 0, 0, 3),
             (3, 0, 3, 0, 3, 0, 3, 0, 3),
             (3, 6, 5, 6, 6, 6, 6, 6, 3),
             (3, 0, 3, 0, 3, 0, 3, 0, 3),
             (3, 0, 0, 0, 3, 0, 2, 0, 3),
             (3, 3, 3, 3, 3, 3, 3, 3, 3))
    
    Maze1, Maze2 = grid2maze(map_1), grid2maze(map_2)
    
    
    directions = {'u':  (-1, 0),
                 'd': ( 1, 0),
                 'l': ( 0,-1),
                 'r':( 0, 1)}
    
    def play_maze(maze):
        
        pos = maze.start
        
        while True:
            maze.visualize()
            
            direction = input("Your move: ")
            
            if direction == 'stop':
                break
            
            if direction not in directions:
                print("Not a valid command!")
                continue 
            
            shift = directions[direction]
            
            new_pos = maze.move(pos, shift)
            
            maze = maze.update_map(pos, new_pos)
            
            pos = new_pos
            
            
    
    maze_0 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 2, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 0, 0, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 3, 3, 0, 0, 3, 3, 6, 0, 0, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_1 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 6, 6, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 2, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 0, 0, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_2 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 2, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 0, 0, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 0, 3],
        [3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_3 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 2, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_4 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 2, 0, 0, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_5 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 2, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 0, 0, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 0, 0, 3, 6, 3, 0, 3],
        [3, 3, 3, 6, 3, 3, 0, 3, 0, 0, 3, 6, 3, 0, 0],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_6 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 6, 3, 0, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 6, 3, 3, 0, 2, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 3, 3, 3, 0, 0, 3, 6, 0, 0, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_7 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 2, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_8 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 2, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_9 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 2, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_10 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 2, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_11 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 2, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 0, 0, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 0, 3],
        [3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_12 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 2, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 3, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_13 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 2, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3],
        [3, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3],
        [3, 0, 0, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3],
    ]
    
    maze_14 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 2, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 3, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_15 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 0, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 0, 3],
        [3, 0, 0, 6, 3, 3, 3, 0, 3, 3, 3, 6, 3, 0, 0],
        [3, 0, 0, 6, 3, 0, 0, 0, 3, 3, 3, 6, 3, 0, 0],
        [3, 2, 0, 6, 3, 0, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_16 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 2, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 0, 0, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 0, 3],
        [3, 0, 0, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3],
    ]
    
    maze_17 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 0, 0, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 0, 2, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_18 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 0, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 2, 3, 6, 3, 0, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_19 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3],
        [3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_20 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 2, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 0, 0, 0, 3, 6, 0, 0, 3],
        [3, 3, 3, 6, 0, 3, 3, 3, 0, 0, 3, 6, 3, 0, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_21 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 0, 2, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_22 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 0, 0, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_23 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 0, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 0, 0, 6, 6, 6, 2, 0, 3, 3, 3, 6, 3, 0, 0],
        [3, 0, 3, 6, 3, 3, 0, 0, 0, 0, 3, 6, 3, 0, 0],
        [3, 0, 3, 6, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3],
    ]
    
    maze_24 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 0, 0, 2, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 0, 0, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 3, 0, 0, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_25 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 6, 6, 0, 0, 0, 0, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 3, 3, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 2, 3, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_26 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 0, 0, 3],
        [3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 0, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 0, 0],
        [3, 0, 3, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 0, 0],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_27 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 0, 3, 0, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 2, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 0, 0, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_28 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 3, 3, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 0, 0, 0, 3, 0, 0, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 0, 0, 3, 3, 0, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 0, 0, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]
    
    maze_29 = [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 0, 3],
        [3, 3, 3, 6, 6, 6, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 0, 0, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 2, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 0, 0, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    ]

###For storing, retrieving our data
def storeData(db, filename):
    with open(filename, 'ab') as dbfile :
        pickle.dump(db, dbfile)
  
def loadData(filename):
    # for reading also binary mode is important
    with open(filename, 'rb') as dbfile :
        db = pickle.load(dbfile)   
    return db

mazes = loadData("mazes")
graphs = loadData("graphs")





# if __name__ == "__main__":
#     pass
        
#     for j in range(0,30): 
#         i=j+1
        
#         mazes[str(i)] = grid2maze(maps.__dict__["maze_"+str(j)]) #Save data
#         mazes[str(i)].name = str(i)

#         graphs[str(i)] = maze2graph(mazes[str(i)]) #Save more data

#         print('done!',i, len(graphs[str(i)]))
        
#     storeData(mazes,"mazes")
#     storeData(graphs,"graphs")

# for i in range(1,10):
#     mazes['map_'+str(i)] = grid2maze( maps.__dict__["map_"+str(i)] )
    
    # Maze2=mazes['2']
    # Maze2.visualize(pos=(3,2), path=[(1,1),(1,2),(2,2)])
    # # 
# tree = maze2statetree(Maze2)

# for key in tree:
#     curr_maze = tree[key]['map']
    
#     curr_maze.visualize()